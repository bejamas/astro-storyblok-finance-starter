<script is:inline>
  !function(t,e){var o,n,p,r;e.__SV||(window.posthog=e,e._i=[],e.init=function(i,s,a){function g(t,e){var o=e.split(".");2==o.length&&(t=t[o[0]],e=o[1]),t[e]=function(){t.push([e].concat(Array.prototype.slice.call(arguments,0)))}}(p=t.createElement("script")).type="text/javascript",p.crossOrigin="anonymous",p.async=!0,p.src=s.api_host+"/static/array.js",(r=t.getElementsByTagName("script")[0]).parentNode.insertBefore(p,r);var u=e;for(void 0!==a?u=e[a]=[]:a="posthog",u.people=u.people||[],u.toString=function(t){var e="posthog";return"posthog"!==a&&(e+="."+a),t||(e+=" (stub)"),e},u.people.toString=function(){return u.toString(1)+".people (stub)"},o="capture identify alias people.set people.set_once set_config register register_once unregister opt_out_capturing has_opted_out_capturing opt_in_capturing reset isFeatureEnabled onFeatureFlags getFeatureFlag getFeatureFlagPayload reloadFeatureFlags group updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures getActiveMatchingSurveys getSurveys getNextSurveyStep onSessionId".split(" "),n=0;n<o.length;n++)g(u,o[n]);e._i.push([i,s,a])},e.__SV=1)}(document,window.posthog||[]);
  posthog.init('phc_Av53XBOmIhYMW24lgpPZAx3pbPKvG3wtaDAlP3BBKyo', {
    api_host:'https://eu.i.posthog.com',
    defaults: '2025-05-24',
    loaded: (posthog) => {
      posthog.onFeatureFlags(() => {
        const controlElement = document.querySelector('[data-posthog="hero-control"]');
        const testElement = document.querySelector('[data-posthog="hero-test"]');


        // Add null checks for safety
        if (!controlElement || !testElement) {
          console.warn('Hero A/B test elements not found');
          return;
        }

        const variant = posthog.getFeatureFlag('hero-layout-test');

        if (variant === 'test') {
          // Show test variant
          controlElement.classList.add('hidden');
          controlElement.classList.remove('flex');
          testElement.classList.remove('hidden');
          testElement.classList.add('flex');
        } else {
          // Show control variant (default case, handles 'control' and undefined)
          controlElement.classList.add('flex');
          controlElement.classList.remove('hidden');
          testElement.classList.add('hidden');
          testElement.classList.remove('flex');
        }

        // Track CTA clicks
        const buttons = document.querySelectorAll('[data-posthog] a');
        buttons.forEach(button => {
          button.addEventListener('click', () => {
            posthog.capture('hero_cta_clicked', {
              variant: variant || 'control',
              button_text: button.textContent?.trim() || '',
              hero_section: button.closest('[data-posthog]').getAttribute('data-posthog') || ''
            });
          });
        });
      });
    }
  })
</script>
